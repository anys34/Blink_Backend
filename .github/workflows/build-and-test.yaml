name: Build & Test

on:
  pull_request:
    branches:
      - main
      - develop
      - feat/**
      - refactor/**
      - fix/**
      - hotfix/**
      - revert/**
      - chore/**
      - test/**

permissions:
  contents: read
  issues: read
  checks: write
  pull-requests: write

jobs:
  build-and-test:
    name: Build & Test
    if: ${{ github.event.pull_request.draft == false }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'corretto'
          cache: 'gradle'

      - name: Cache Dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Run ktlint and generate checkstyle report
        run: ./gradlew ktlintCheck

      - name: Report ktlint results with reviewdog
        if: failure()
        uses: reviewdog/action-reviewdog@v5
        with:
          name: ktlint
          reporter: github-pr-check
          tool_name: ktlint
          fail_on_error: false
          filter_mode: diff_context
          level: warning
          input: build/reports/ktlint/ktlint-checkstyle-report.xml
          format: checkstyle

      - name: Upload ktlint report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: ktlint-report
          path: build/reports/ktlint/

      - name: Build with Gradle
        run: |
          chmod +x gradlew
          ./gradlew jibDockerBuild

      - name: Register test results as comments in PR
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: '**/build/test-results/test/TEST-*.xml'
